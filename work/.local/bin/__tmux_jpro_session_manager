#!/bin/bash
set -xeuo pipefail

test -d "${XDG_CACHE_HOME:?not set}/tmux" || mkdir -p "$_"
exec 2>>"${XDG_CACHE_HOME}/tmux/jamf_session.log"

SESH="work"
DIR="${JAMF_DIR:?not set}"

if ! tmux has-session -t "${SESH:?not set}" 2>/dev/null; then
  tmuxinator start "$SESH" --no-attach
fi

if [[ -z "${1:-}" ]]; then
  instance=$(
    find "${DIR:?not set}/sessions" -depth 1 -type d -exec stat -f '%B %N' {} \; | sort -rn | awk -F/ '{print $NF}' | fzf --bind=enter:replace-query+print-query --reverse --header "existing sessions:" --tmux center,20% || exit 0
  )
else
  instance="$1"
fi

if [[ "$instance" ]]; then
  session_dir="${DIR}/sessions/$instance"

  if ! tmux list-windows -t "$SESH":"$instance" &>/dev/null; then
    test -d "$session_dir" || mkdir -p "$session_dir"/{logs,data}
    echo 'export KUBECONFIG="$(expand_path ./kubeconfig)"' >"$session_dir/.envrc"
    echo "export INST=$instance" >>"$session_dir/.envrc"
    direnv allow "$session_dir"
    tmux new-window -t "$SESH": -n "$instance" -c "$session_dir"

    # select window
    tmux switchc -t "$SESH"
    tmux select-window -t "$SESH":"$instance"

    # create layout
    tmux split-window -c "$session_dir"
    tmux split-window -h -p 30 -c "$session_dir"
    tmux split-window -h -t 1 -p 30 -c "$session_dir"
    tmux select-pane -t 3

    # enable logging
    for i in {2..4}; do
      tmux pipe-pane -t "$i" "cat >> ${session_dir}/logs/pane_$i.log"
    done

    # set context and run clops tools
    tmux send-keys -t '{top-left}' "__jpro_set_ctx $instance ; k9s" C-m
    tmux send-keys -t '{top-right}' "jstatus3 -i $instance" C-m
    tmux send-keys -t '{bottom-left}' "hermes jpro actions get $instance" C-m
    tmux send-keys -t '{bottom-right}' "hermes jpro get $instance" C-m

    # bind key for sketchybar context
    tmux bind-key -T prefix C "run-shell 'sketchybar --trigger set_ctx HERMES_CTX=#{window_name}'"
  else
    # select window
    tmux switchc -t "$SESH"
    tmux select-window -t "$SESH":"$instance"
  fi
fi
